name: Deploy to env

on:
  workflow_dispatch:
    inputs:
      service:
        type: choice
        description: 'target service'
        required: true
        options:
          - service-a
          - service-b
      env:
        type: choice
        description: 'target env'
        required: true
        options:
          - dev
          - stg
          - prd
      version-up-type:
        type: choice
        description: 'version up type'
        default: patch
        options:
          - patch
          - minor
          - major

jobs:
  create-update-tag:
    runs-on: ubuntu-latest
    outputs:
      TARGET_SERVICES: ${{ steps.get_newest_tag.outputs.GENERATED_GIT_TAG }}
    steps:
      - uses: actions/checkout@v3

      - name: Get Newest Tag
        id: get_newest_tag
        run: |
          echo ${{ github.event.inputs.env }}-${{ github.event.inputs.service }}
          GIT_TAG=$(git tag --sort -authordate | grep "${{ github.event.inputs.env }}"-"${{ github.event.inputs.service }}" | head -n 1)
          echo $GIT_TAG
          echo "GENERATED_GIT_TAG=$(echo $GIT_TAG)" >> $GITHUB_OUTPUT
        shell: bash
      - name: generage
        id: generate_new_tag
        uses: ./.github/actions/increment-git-tag
        with:
          version-type: ${{ inputs.version-up-type }}
          git-tag: ${{ steps.get_newest_tag.outputs.GENERATED_GIT_TAG }}
      - name: echo output
        run: |
          echo "New Version!"
          echo ${{ steps.generate_new_tag.outputs.result }}


    #  - uses: rickstaa/action-create-tag@v1.3
    #    with:
    #      tag: "${{ steps.generate_git_tag.outputs.GENERATED_GIT_TAG }}"

  deploy-to-service1:
    needs: create-update-tag
    runs-on: ubuntu-latest
    permissions:
      id-token: write
      contents: read
      pull-requests: write
      statuses: write
    environment:
      name: develop

    if: ${{github.event.inputs.service}} == 'service1'

    steps:
      - uses: actions/checkout@v3
      - name: Get AWS REGION
        id: get_aws_region
        uses: mikefarah/yq@master
        with:
          cmd: yq ".${{ github.event.inputs.env }}.AWS_REGION" .github/constants/aws-role.yaml

      - name: Get AWS
        id: get_aws_role
        uses: mikefarah/yq@master
        with:
          cmd: yq ".${{ github.event.inputs.env }}.AWS_ROLE_TO_ASSUME" .github/constants/aws-role.yaml
      
      - name: Reuse a variable obtained in another step 
        run: |
          echo ${{ steps.get_aws_region.outputs.result }}
          echo ${{ steps.get_aws_role.outputs.result }}
